[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/akame/Documents/BAT-MAN/build/bootloader/esp-idf/esptool_py && /Users/akame/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/akame/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/akame/Documents/BAT-MAN/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/spi_handler.c.obj
/Users/akame/Documents/BAT-MAN/main/spi_handler.c:153:23: warning: 'print_hex_isr' defined but not used [-Wunused-function]
  153 | IRAM_ATTR static void print_hex_isr(const char *tag, const uint8_t *buf,
      |                       ^~~~~~~~~~~~~
/Users/akame/Documents/BAT-MAN/main/spi_handler.c:137:13: warning: 'print_hex' defined but not used [-Wunused-function]
  137 | static void print_hex(const char *tag, const uint8_t *buf, size_t len) {
      |             ^~~~~~~~~
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/Batman_esp.elf.dir/project_elf_src_esp32s3.c.obj
[8/10] Linking CXX executable Batman_esp.elf
[9/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/akame/Documents/BAT-MAN/build/Batman_esp.bin
[10/10] cd /Users/akame/Documents/BAT-MAN/build/esp-idf/esptool_py && /Users/akame/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/akame/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/akame/Documents/BAT-MAN/build/partition_table/partition-table.bin /Users/akame/Documents/BAT-MAN/build/Batman_esp.bin
Batman_esp.bin binary size 0x3c3c0 bytes. Smallest app partition is 0x100000 bytes. 0xc3c40 bytes (76%) free.
